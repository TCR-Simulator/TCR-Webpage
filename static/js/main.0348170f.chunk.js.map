{"version":3,"sources":["AcceptedList.js","PendingList.js","RejectedList.js","ChallengeList.js","Tab.js","SettingsFrame.js","App.js","serviceWorker.js","index.js"],"names":["AcceptedList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleToggle","value","checked","state","currentIndex","indexOf","newChecked","toConsumableArray","push","splice","setState","items","deleted","event","currentItems","textBox","target","previousElementSibling","_this2","classes","react_default","a","createElement","className","root","List_default","id","map","ListItem_default","key","dense","button","src","ListItemText_default","primary","concat","ListItemSecondaryAction_default","align","Button_default","variant","color","challengebutton","onClick","addItem","bind","applybutton","React","Component","withStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","margin","spacing","unit","&:hover","input","display","PendingList","currentItem","textContent","updatedItems","filter","item","type","placeholder","RejectedList","ChallengeList","TabContainer","_ref","children","dir","Typography_default","component","style","padding","FullWidthTabs","handleChange","handleChangeIndex","index","_this$props","AppBar_default","position","Tabs_default","onChange","indicatorColor","textColor","fullWidth","Tab_default","label","lib_default","axis","direction","onChangeIndex","src_AcceptedList","src_PendingList","src_ChallengeList","src_RejectedList","marginTop","withTheme","SettingsFrame","Grid_default","container","justify","src_Tab","defaultProps","settings","Dashboard","createMuiTheme","teal","secondary","main","anchorEl","handleMenu","currentTarget","handleClose","open","Boolean","elevation","Toolbar_default","grow","IconButton_default","aria-owns","aria-haspopup","AccountCircle_default","Menu_default","anchorE1","anchorOrigin","vertical","horizontal","getContentAnchorEl","transformOrigin","onClose","MenuItem_default","src_SettingsFrame","settingFrame","height","content","flexGrow","overflow","zIndex","menuButton","marginLeft","marginRight","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0348170f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 700,\n    backgroundColor: theme.palette.background.paper,\n  },\n  challengebutton: {\n    margin: theme.spacing.unit,\n    backgroundColor: '#FFF',\n    '&:hover': {\n      variant: \"cotained\",\n      color: '#FFF',\n      backgroundColor: '#F00',\n    }\n  },\n  applybutton: {\n    margin: theme.spacing.unit,\n    backgroundColor: '#FFF',\n    '&:hover': {\n      variant: \"cotained\",\n      color: '#FFF',\n      backgroundColor: '#CCC',\n    }\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass AcceptedList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: [],\n      items: ['Blank Space - Taylor Swift', \n              'New Rules - Dua Lipa',\n              'There is nothing holding me back - Shawn Mendes'],\n      deleted: false,\n    }\n  }\n\n  addItem (event) {\n    let currentItems = this.state.items;\n    let textBox = event.target.previousElementSibling;\n\n    if (textBox.value) {\n        currentItems.push(textBox.value);\n        textBox.value = '';\n\n        this.setState({\n          items: currentItems,\n        });\n    }\n  }\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <List id=\"AcceptedList\">\n          {this.state.items.map(value => (\n            <ListItem key={value} dense button>\n              <img src=\"image/done.png\" />\n              <ListItemText primary={`${value}`} />\n              <ListItemSecondaryAction>\n                <div align=\"right\">\n                  <Button variant=\"outlined\" color=\"secondary\" className={classes.challengebutton} onClick={this.addItem.bind(this)}>\n                    Challenge\n                  </Button>\n                  <Button variant=\"outlined\" color=\"default\" className={classes.applybutton}>\n                    Withdraw\n                  </Button>\n                </div>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\n\n\nAcceptedList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AcceptedList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 700,\n    backgroundColor: theme.palette.background.paper,\n  },\n  challengebutton: {\n    margin: theme.spacing.unit,\n    backgroundColor: '#FFF',\n    '&:hover': {\n      variant: \"cotained\",\n      color: '#FFF',\n      backgroundColor: '#F00',\n    }\n  },\n  applybutton: {\n    margin: theme.spacing.unit,\n    backgroundColor: '#FFF',\n    '&:hover': {\n      variant: \"cotained\",\n      color: '#FFF',\n      backgroundColor: '#CCC',\n    }\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass PendingList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: [],\n      items: [],\n      deleted: false,\n    }\n  }\n\n  addItem (event) {\n    let currentItems = this.state.items;\n    let textBox = event.target.previousElementSibling;\n\n    if (textBox.value) {\n        currentItems.push(textBox.value);\n        textBox.value = '';\n\n        this.setState({\n          items: currentItems,\n        });\n    }\n  }\n\n  removeItem (event) {\n      let currentItem = event.target.textContent;\n      let updatedItems = this.state.items.filter((item) => {\n        return currentItem !== item;\n      });\n\n      this.setState({\n        items: updatedItems,\n      });\n\n      !this.state.deleted && this.setState({\n        deleted: true\n      });\n  }\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <List>\n          {this.state.items.map(value => (\n            <ListItem key={value} dense button>\n              <img src=\"static/image/baseline_done_black_18dp.png\" />\n              <ListItemText primary={`${value}`} />\n              <ListItemSecondaryAction>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n\n        <nav className=\"nav-add\">\n            <input type=\"text\" id=\"urlinput\" placeholder=\"URL\" />\n            <input type=\"text\" id=\"nameinput\" placeholder=\"Name\" />\n            <button id=\"new-item\"\n                        onClick={this.addItem.bind(this)}>Apply</button>\n        </nav>\n      </div>\n    );\n  }\n}\n\n\nPendingList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PendingList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 700,\n    backgroundColor: theme.palette.background.paper,\n  },\n  challengebutton: {\n    margin: theme.spacing.unit,\n    backgroundColor: '#FFF',\n    '&:hover': {\n      variant: \"cotained\",\n      color: '#FFF',\n      backgroundColor: '#F00',\n    }\n  },\n  applybutton: {\n    margin: theme.spacing.unit,\n    backgroundColor: '#FFF',\n    '&:hover': {\n      variant: \"cotained\",\n      color: '#FFF',\n      backgroundColor: '#CCC',\n    }\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass RejectedList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: [],\n      items: [],\n      deleted: false,\n    }\n  }\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <List>\n          {this.state.items.map(value => (\n            <ListItem key={value} dense button>\n              <img src=\"static/image/baseline_done_black_18dp.png\" />\n              <ListItemText primary={`${value}`} />\n              <ListItemSecondaryAction>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\n\n\nRejectedList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(RejectedList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 700,\n    backgroundColor: theme.palette.background.paper,\n  },\n  challengebutton: {\n    margin: theme.spacing.unit,\n    backgroundColor: '#FFF',\n    '&:hover': {\n      variant: \"cotained\",\n      color: '#FFF',\n      backgroundColor: '#F00',\n    }\n  },\n  applybutton: {\n    margin: theme.spacing.unit,\n    backgroundColor: '#FFF',\n    '&:hover': {\n      variant: \"cotained\",\n      color: '#FFF',\n      backgroundColor: '#CCC',\n    }\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass ChallengeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: [],\n      items: [],\n      deleted: false,\n    }\n  }\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <List>\n          {this.state.items.map(value => (\n            <ListItem key={value} dense button>\n              <img src=\"static/image/baseline_done_black_18dp.png\" />\n              <ListItemText primary={`${value}`} />\n              <ListItemSecondaryAction>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\n\n\nChallengeList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ChallengeList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport AcceptedList from './AcceptedList';\nimport PendingList from './PendingList';\nimport RejectedList from './RejectedList';\nimport ChallengeList from './ChallengeList';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 700,\n    marginTop: 20,\n  },\n});\n\nclass FullWidthTabs extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={this.state.value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            fullWidth\n          >\n            <Tab label=\"Accepted\" />\n            <Tab label=\"Pending\" />\n            <Tab label=\"In Challenge\" />\n            <Tab label=\"Rejected\" />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={this.state.value}\n          onChangeIndex={this.handleChangeIndex}\n        >\n          <TabContainer dir={theme.direction}>\n          <AcceptedList/>\n          </TabContainer>\n\n          <TabContainer dir={theme.direction}>\n          <PendingList/>\n          </TabContainer>\n\n          <TabContainer dir={theme.direction}>\n          <ChallengeList/>\n          </TabContainer>\n\n          <TabContainer dir={theme.direction}>\n          <RejectedList/>\n          </TabContainer>\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nFullWidthTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(FullWidthTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport FullWidthTabs from './Tab';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = {\n  settings: {\n  },\n};\n\nconst SettingsFrame = (props) => {\n  const { classes, className } = props;\n  return (\n   \n    <div id=\"settings\" className={className}>\n      <Grid container justify = \"center\">\n          <FullWidthTabs/>\n      </Grid>\n    </div>\n  );\n};\n\nSettingsFrame.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n};\n\nSettingsFrame.defaultProps = {\n  className: null,\n};\n\nexport default withStyles(styles)(SettingsFrame);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { MuiThemeProvider, createMuiTheme, withStyles } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\nimport SettingsFrame from './SettingsFrame';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from'@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: teal,\n    secondary: {\n      main: '#444444',\n    },\n  },\n});\n\nconst styles = {\n  root: {\n    height: '100%',\n  },\n  content: {\n    height: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  settingFrame: {\n    height: '100%',\n    overflow: 'auto',\n    zIndex: 10,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  }\n};\n\nclass Dashboard extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({anchorEl: event.currentTarget });\n  }\n\n  handleClose = () => {\n    this.setState({anchorEl: null});\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"relative\" color=\"primary\" elevation={2}>\n          <Toolbar>\n            <Typography variant=\"h5\" color=\"inherit\" className={classes.grow}>\n              TCR Simulator\n            </Typography>\n            <div>\n              <IconButton\n                aria-owns={open ? 'menu-appbar' : null}\n                aria-haspopup=\"true\"\n                onClick={this.handleMenu}\n                color=\"inherit\"\n              >\n              <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorE1={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                getContentAnchorEl={null}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={this.handleClose}\n              >\n                <MenuItem onClick={this.handleClose}>Profile</MenuItem>\n              </Menu>\n            </div>\n          </Toolbar>\n        </AppBar>\n          <SettingsFrame className={classes.settingFrame} />\n      </div>\n    );  \n  }\n};\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default withStyles(styles)(Dashboard);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}